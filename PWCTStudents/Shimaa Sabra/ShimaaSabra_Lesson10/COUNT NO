*---------------------------------------------------------------------------*
* Time : 20:20:54    Date : 02/07/2012
*---------------------------------------------------------------------------*
* Programming without coding technology 1.8 (Smart) [2006-2012]  
* URL : http://www.sourceforge.net/projects/doublesvsoop   
*---------------------------------------------------------------------------*
* Visual Programming Language : HarbourPWCT 
*---------------------------------------------------------------------------*
* Compilers                   : Borland C/C++ & Harbour
* GUI Framework               : HarbourMiniGUI Extended
*---------------------------------------------------------------------------*
#include "SSXHB.ch"
#include "MiniGUI.ch"
#include "hbclass.ch"
#include "xhb.ch"
Function Main
Public True,False 
True = .T. 
False = .F. 
New Server Server1 Type Slave Server Eigen Value 000
 Details :
* Get parameters from command line
Parameters SP1,SP2,SP3,SP4,SP5,SP6,SP7,SP8
	DataUnit :
	CodeUnit :
			Circuit        Main                          
				Branch     Main                          
					Resistance Main                          
	VetoUnit :
End Of Server 

	Resistance WIN32EVENTS() Address Code Unit : WIN32EVENTS

  ADD RESISTANCE WIN32EVENTS 


Resistance R_GET_18smart1() address Code Unit : Circuits\Main\Main\Main


CALL RESISTANCE Circuits\Main\Main\Main
Return 

  FUNCTION STARTSERVER()
   	Server FireON
  RETURN

  RESISTANCE WIN32EVENTS() CODE
	   DO EVENTS
  RETURN

* Resistance Code Unit : Circuits\Main\Main\Main
Resistance R_GET_18smart1() code
if !iswindowdefined( win1 )
DEFINE WINDOW win1 ;
AT 10 ,10 ;
WIDTH 490 ;
HEIGHT 626 ;
ICON "PWCTICON" ;
TITLE "Get Max &Min No.  " ;
MAIN ;
NOMAXIMIZE ;
NOSIZE ;
BACKCOLOR {255,255,255} 

@ -3 ,-7 IMAGE image1;
PICTURE "IMAGE.JPG";
STRETCH ;
WIDTH 515 HEIGHT 97
@ 120 ,22 LABEL lbl1 ;
VALUE "Number " ;
WIDTH 81 ;
HEIGHT 24 ;
AUTOSIZE ;
FONT "Arial" SIZE 12  ;
BACKCOLOR {236,233,216} ;
TRANSPARENT ;
FONTCOLOR {0,0,0}
@ 364 ,53 LABEL lbl2 ;
VALUE "Get Max. Number " ;
WIDTH 131 ;
HEIGHT 23 ;
AUTOSIZE ;
FONT "Arial" SIZE 12  ;
BACKCOLOR {236,233,216} ;
TRANSPARENT ;
FONTCOLOR {0,0,0}
@ 399 ,53 LABEL lbl3 ;
VALUE "Get Min. Number " ;
WIDTH 131 ;
HEIGHT 23 ;
AUTOSIZE ;
FONT "Arial" SIZE 12  ;
BACKCOLOR {236,233,216} ;
TRANSPARENT ;
FONTCOLOR {0,0,0}
@ 435 ,53 LABEL lbl4 ;
VALUE "Get Average " ;
WIDTH 100 ;
HEIGHT 25 ;
AUTOSIZE ;
FONT "Arial" SIZE 12  ;
BACKCOLOR {236,233,216} ;
TRANSPARENT ;
FONTCOLOR {0,0,0}
@ 118 ,113 TEXTBOX text1;
HEIGHT 30 ;
WIDTH 123 ;
BACKCOLOR {255,255,255} ;
FONTCOLOR {0,0,0} 

@ 171 ,82 LISTBOX list1;
WIDTH 312 ;
HEIGHT 161 ;
FONT "Arial" SIZE 12 ;
BACKCOLOR {255,255,255} ;
FONTCOLOR {0,0,0}
@ 360 ,204 TEXTBOX text2;
HEIGHT 29 ;
WIDTH 85 ;
BACKCOLOR {255,255,255} ;
FONTCOLOR {0,0,0} 

@ 396 ,204 TEXTBOX text3;
HEIGHT 29 ;
WIDTH 85 ;
BACKCOLOR {255,255,255} ;
FONTCOLOR {0,0,0} 

@ 432 ,204 TEXTBOX text4;
HEIGHT 29 ;
WIDTH 85 ;
BACKCOLOR {255,255,255} ;
FONTCOLOR {0,0,0} 

@ 506 ,293 BUTTONEX btn1;
CAPTION "Add ";
ON CLICK add()  ;
WIDTH 75 HEIGHT 30 ;
FONT "Arial" SIZE 12 ;
TOOLTIP ""
@ 505 ,372 BUTTONEX btn2;
CAPTION "Quit";
ON CLICK quit()  ;
WIDTH 75 HEIGHT 31 ;
FONT "Arial" SIZE 12 ;
TOOLTIP ""
@ 480 ,-4 LABEL lbl5 ;
VALUE " " ;
WIDTH 516 ;
HEIGHT 17 ;
FONT "Arial" SIZE 9  ;
BACKCOLOR {43,148,179} ;
FONTCOLOR {0,0,0}
@ 362 ,18 BUTTONEX btn3;
CAPTION " ";
ON CLICK mymax()  ;
WIDTH 27 HEIGHT 23 ;
FONT "Arial" SIZE 9 ;
TOOLTIP ""
@ 398 ,18 BUTTONEX btn4;
CAPTION " ";
WIDTH 27 HEIGHT 23 ;
FONT "Arial" SIZE 9 ;
TOOLTIP ""
@ 432 ,18 BUTTONEX btn5;
CAPTION " ";
WIDTH 27 HEIGHT 23 ;
FONT "Arial" SIZE 9 ;
TOOLTIP ""
END WINDOW

ACTIVATE WINDOW win1
EndIF

procedure quit()
win1.Release ( )
return
procedure add()
text := win1.text1.Value
win1.list1.AddItem ( text )
return
procedure mymax()
count := win1.list1.ItemCount
IF count==0
MyOut := MSGOKCANCEL("This list is empty ","Information ")
Return 0
ENDIF
FOR x = 1 TO count STEP 1
item := win1.list1.item(x)
IF item<count
count := item
ENDIF
win1.text2.Value := x
Next
return


End Of Resistance

INIT PROCEDURE Init_GET
START DOUBLES
SS_ESARES("Circuits\Main\Main\Main",52)
SS_ESAGOAL("Circuits\Main\Main\Main","Main")
SS_ESASTEP("Circuits\Main\Main\Main","Define New Window  ( win1 ) , Title : 'Get Max &Min No.  '",1,5)
SS_ESASTEP("Circuits\Main\Main\Main","Window Properties",6,12)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Image ( image1 ) , Image : 'IMAGE.JPG'",13,14)
SS_ESASTEP("Circuits\Main\Main\Main","Image Properties",15,16)
SS_ESASTEP("Circuits\Main\Main\Main","Define Label ( lbl1 ) , Caption : 'Number '",17,18)
SS_ESASTEP("Circuits\Main\Main\Main","Label Properties",19,25)
SS_ESASTEP("Circuits\Main\Main\Main","Define Label ( lbl2 ) , Caption : 'Get Max. Number '",26,27)
SS_ESASTEP("Circuits\Main\Main\Main","Label Properties",28,34)
SS_ESASTEP("Circuits\Main\Main\Main","Define Label ( lbl3 ) , Caption : 'Get Min. Number '",35,36)
SS_ESASTEP("Circuits\Main\Main\Main","Label Properties",37,43)
SS_ESASTEP("Circuits\Main\Main\Main","Define Label ( lbl4 ) , Caption : 'Get Average '",44,45)
SS_ESASTEP("Circuits\Main\Main\Main","Label Properties",46,52)
SS_ESASTEP("Circuits\Main\Main\Main","Define TextBox  ( text1  )",53,53)
SS_ESASTEP("Circuits\Main\Main\Main","TextBox Properties",54,58)
SS_ESASTEP("Circuits\Main\Main\Main","Define New ListBox ( list1 )",59,59)
SS_ESASTEP("Circuits\Main\Main\Main","ListBox Properties",60,64)
SS_ESASTEP("Circuits\Main\Main\Main","Define TextBox  ( text2  )",65,65)
SS_ESASTEP("Circuits\Main\Main\Main","TextBox Properties",66,70)
SS_ESASTEP("Circuits\Main\Main\Main","Define TextBox  ( text3  )",71,71)
SS_ESASTEP("Circuits\Main\Main\Main","TextBox Properties",72,76)
SS_ESASTEP("Circuits\Main\Main\Main","Define TextBox  ( text4  )",77,77)
SS_ESASTEP("Circuits\Main\Main\Main","TextBox Properties",78,82)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( btn1 ) , Caption : 'Add '",83,84)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK : Action add",85,85)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",86,88)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( btn2 ) , Caption : 'Quit'",89,90)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK : Action quit",91,91)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",92,94)
SS_ESASTEP("Circuits\Main\Main\Main","Define Label ( lbl5 ) , Caption : ' '",95,96)
SS_ESASTEP("Circuits\Main\Main\Main","Label Properties",97,101)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( btn3 ) , Caption : ' '",102,103)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK : Action mymax",104,104)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",105,107)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( btn4 ) , Caption : ' '",108,109)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",110,112)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( btn5 ) , Caption : ' '",113,114)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",115,117)
SS_ESASTEP("Circuits\Main\Main\Main","End Of Window",118,119)
SS_ESASTEP("Circuits\Main\Main\Main","Activate window",120,122)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure quit ( Event : CLICK )",123,123)
SS_ESASTEP("Circuits\Main\Main\Main","win1.Release ( )",124,124)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",125,125)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure add ( Event : CLICK )",126,126)
SS_ESASTEP("Circuits\Main\Main\Main","text = win1.text1.Value",127,127)
SS_ESASTEP("Circuits\Main\Main\Main","win1.list1.AddItem ( text )",128,128)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",129,129)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure mymax ( Event : CLICK )",130,130)
SS_ESASTEP("Circuits\Main\Main\Main","count = win1.list1.ItemCount",131,131)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( count==0 )",132,132)
SS_ESASTEP("Circuits\Main\Main\Main","Show Message 'This list is empty ' Title 'Information ' Type: Message Ok/Cancel",133,133)
SS_ESASTEP("Circuits\Main\Main\Main","Return 0",134,134)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",135,135)
SS_ESASTEP("Circuits\Main\Main\Main","FOR LOOP ( From x = 1 To count Step 1)",136,136)
SS_ESASTEP("Circuits\Main\Main\Main","item = win1.list1.item(x)",137,137)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( item<count )",138,138)
SS_ESASTEP("Circuits\Main\Main\Main","count = item",139,139)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",140,140)
SS_ESASTEP("Circuits\Main\Main\Main","win1.text2.Value := x",141,141)
SS_ESASTEP("Circuits\Main\Main\Main","End of For Loop",142,142)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",143,143)
Return
*-------------------------------------------------------------------*
