#line 54 "c:\SSBUILD\minigui\include\i_var.ch"
  MEMVAR _HMG_SYSDATA
  MEMVAR _HMG_SCRSAVERDATA
#line 109 "c:\SSBUILD\xharbour\include\hbclass.ch"
   DYNAMIC DivertConstructorCall











DECLARE HBClass  New( cName AS String, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS Object  Instance() AS Object  AddClsMethod( cName AS String, @MethodName(), nScope AS Numeric, n2 AS Numeric, n3 AS Numeric )  AddMultiClsData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String )  AddMultiData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  AddInLine( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  AddVirtual( cName AS String )
#line 4 "NUNPUZLLE.prg"
Function Main













Public True,False
True = .T.
False = .F.
SS_NEWSERVER("Server1","Slave","000")


Parameters SP1,SP2,SP3,SP4,SP5,SP6,SP7,SP8
    SS_FLAG3 = 1 ; SS_FLAG = 1 ; SS_FLAG2 = 1
    SS_FLAG = 4 ; SS_FLAG2 = 3 ; SS_FLAG3 = 2
            SS_NEWCIRCUIT( "Main" )
                SS_NEWBRANCH( "Main" )
                    SS_NRESIS( "Main" )
    SS_FLAG3 = 3


    SS_NEWR( "WIN32EVENTS()" , "WIN32EVENTS" )

  SS_ADDRES("WIN32EVENTS")


SS_NEWR( "R7655133857_1()" , "Circuits\Main\Main\Main" )


ss_callr( "Circuits\Main\Main\Main" )
Return

  FUNCTION STARTSERVER()
       SS_FIREON()
  RETURN

  function WIN32EVENTS()
       ProcessMessages()
  RETURN


function R7655133857_1()









 _DefineWindow ( "win1", "·⁄»…  — Ì» «·«—ﬁ«„  »Ê«”ÿ… «»—«ÂÌ„ ⁄»œ«··«Â", 10, 10, 389, 257, .F., .T., .F., .F., .F., {,}, {,},, ,, , ,, {236,233,216} , , .F. , .F. , .T. , "PWCTICON" , .F. , ,, , " ·⁄»…  — Ì» «·«—ﬁ«„ » ﬁ‰Ì… «·»—„Ã… »œÊ‰ ﬂÊœ " , ,, , , , , , , , , , .F. , , , , .F. , , , , , .F. , .F. )






_DefineOwnerButton ( "b1",, 7, 152, "1", {|| pb1()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b2",, 7, 46, "2", {|| pb2()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b3",, 135, 96, "3", {|| pb3()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b4",, 135, 45, "4", {|| pb4()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b5",, 7, 100, "5", {|| pb5()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b6",, 135, 148, "0", {|| pb6()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b7",, 263, 144, "6", {|| pb7()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b8",, 263, 44, "7", {|| pb8()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )





_DefineOwnerButton ( "b9",, 263, 92, "8", {|| pb9()}, 100, 30,, "",,, .F., .F.,, .F., .F., .F.,, "Arial", 18, .F., .F., .F., .F., .F., .F., .F.,,, .F., .F., .F. )
_EndWindow ()



calldll32("SetWindowLong","USER32.DLL",GetFormHandle ("Win1"),-20, NUMOR(calldll32("GetWindowLong","USER32.DLL", GetFormHandle ("Win1"), -20),0x400000,0x100000))
Domethod ( "win1", "b6" , "Hide" )
_ActivateWindow( {"win1"}, .F. )

Proc pb1
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a5=0
a5 = STR ( a5 )
a1 = STR ( a1 )
SetProperty ( "win1", "b1" , "Caption" , a5 )
SetProperty ( "win1", "b5" , "Caption" , a1 )
Domethod ( "win1", "b5" , "Show" )
Domethod ( "win1", "b1" , "Hide" )
ENDIF
IF a6=0
a1 = STR ( a1 )
a6 = STR ( a6 )
SetProperty ( "win1", "b1" , "Caption" , a6 )
SetProperty ( "win1", "b6" , "Caption" , a1 )
Domethod ( "win1", "b1" , "Hide" )
Domethod ( "win1", "b6" , "Show" )
ENDIF
Return Nil
Proc pb2
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a4=0
a4 = STR ( a4 )
a2 = STR ( a2 )
SetProperty ( "win1", "b2" , "Caption" , a4 )
SetProperty ( "win1", "b4" , "Caption" , a2 )
Domethod ( "win1", "b4" , "Show" )
Domethod ( "win1", "b2" , "Hide" )
ENDIF
IF a5=0
a2 = STR ( a2 )
a5 = STR ( a5 )
SetProperty ( "win1", "b2" , "Caption" , a5 )
SetProperty ( "win1", "b5" , "Caption" , a2 )
Domethod ( "win1", "b5" , "Show" )
Domethod ( "win1", "b2" , "Hide" )
ENDIF
Return Nil
Proc pb3
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a4=0
a4 = STR ( a4 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a4 )
SetProperty ( "win1", "b4" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Hide" )
Domethod ( "win1", "b4" , "Show" )
ENDIF
IF a5=0
a5 = STR ( a5 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a5 )
SetProperty ( "win1", "b5" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Hide" )
Domethod ( "win1", "b5" , "Show" )
ENDIF
IF a6=0
a6 = STR ( a6 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a6 )
SetProperty ( "win1", "b6" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Hide" )
Domethod ( "win1", "b6" , "Show" )
ENDIF
IF a9=0
a9 = STR ( a9 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a9 )
SetProperty ( "win1", "b9" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Hide" )
Domethod ( "win1", "b9" , "Show" )
ENDIF
Return Nil
Proc pb4
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a2=0
a4 = STR ( a4 )
a2 = STR ( a2 )
SetProperty ( "win1", "b2" , "Caption" , a4 )
SetProperty ( "win1", "b4" , "Caption" , a2 )
Domethod ( "win1", "b2" , "Show" )
Domethod ( "win1", "b4" , "Hide" )
ENDIF
IF a3=0
a4 = STR ( a4 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a4 )
SetProperty ( "win1", "b4" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Show" )
Domethod ( "win1", "b4" , "Hide" )
ENDIF
IF a8=0
a4 = STR ( a4 )
a8 = STR ( a8 )
SetProperty ( "win1", "b4" , "Caption" , a8 )
SetProperty ( "win1", "b8" , "Caption" , a4 )
Domethod ( "win1", "b8" , "Show" )
Domethod ( "win1", "b4" , "Hide" )
ENDIF
Return Nil
Proc pb5
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a2=0
a5 = STR ( a5 )
a2 = STR ( a2 )
SetProperty ( "win1", "b2" , "Caption" , a5 )
SetProperty ( "win1", "b5" , "Caption" , a2 )
Domethod ( "win1", "b2" , "Show" )
Domethod ( "win1", "b5" , "Hide" )
ENDIF
IF a3=0
a5 = STR ( a5 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a5 )
SetProperty ( "win1", "b5" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Show" )
Domethod ( "win1", "b5" , "Hide" )
ENDIF
IF a1=0
a5 = STR ( a5 )
a1 = STR ( a1 )
SetProperty ( "win1", "b5" , "Caption" , a1 )
SetProperty ( "win1", "b1" , "Caption" , a5 )
Domethod ( "win1", "b1" , "Show" )
Domethod ( "win1", "b5" , "Hide" )
ENDIF
Return Nil
Proc pb6
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a3=0
a6 = STR ( a6 )
a3 = STR ( a3 )
SetProperty ( "win1", "b3" , "Caption" , a6 )
SetProperty ( "win1", "b6" , "Caption" , a3 )
Domethod ( "win1", "b3" , "Show" )
Domethod ( "win1", "b6" , "Hide" )
ENDIF
IF a1=0
a6 = STR ( a6 )
a1 = STR ( a1 )
SetProperty ( "win1", "b6" , "Caption" , a1 )
SetProperty ( "win1", "b1" , "Caption" , a6 )
Domethod ( "win1", "b1" , "Show" )
Domethod ( "win1", "b6" , "Hide" )
ENDIF
IF a7=0
a6 = STR ( a6 )
a7 = STR ( a7 )
SetProperty ( "win1", "b6" , "Caption" , a7 )
SetProperty ( "win1", "b7" , "Caption" , a6 )
Domethod ( "win1", "b7" , "Show" )
Domethod ( "win1", "b6" , "Hide" )
ENDIF
Return Nil
Proc pb7
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a9=0
a9 = STR ( a9 )
a7 = STR ( a7 )
SetProperty ( "win1", "b7" , "Caption" , a9 )
SetProperty ( "win1", "b9" , "Caption" , a7 )
Domethod ( "win1", "b9" , "Show" )
Domethod ( "win1", "b7" , "Hide" )
ENDIF
IF a6=0
a6 = STR ( a6 )
a7 = STR ( a7 )
SetProperty ( "win1", "b6" , "Caption" , a7 )
SetProperty ( "win1", "b7" , "Caption" , a6 )
Domethod ( "win1", "b6" , "Show" )
Domethod ( "win1", "b7" , "Hide" )
ENDIF
Return Nil
Proc pb8
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a9=0
a9 = STR ( a9 )
a8 = STR ( a8 )
SetProperty ( "win1", "b8" , "Caption" , a9 )
SetProperty ( "win1", "b9" , "Caption" , a8 )
Domethod ( "win1", "b9" , "Show" )
Domethod ( "win1", "b8" , "Hide" )
ENDIF
IF a4=0
a8 = STR ( a8 )
a4 = STR ( a4 )
SetProperty ( "win1", "b4" , "Caption" , a8 )
SetProperty ( "win1", "b8" , "Caption" , a4 )
Domethod ( "win1", "b4" , "Show" )
Domethod ( "win1", "b8" , "Hide" )
ENDIF
Return Nil
Proc pb9
a1 := GetProperty ( "win1", "b1" , "caption" )
a2 := GetProperty ( "win1", "b2" , "caption" )
a3 := GetProperty ( "win1", "b3" , "caption" )
a4 := GetProperty ( "win1", "b4" , "caption" )
a5 := GetProperty ( "win1", "b5" , "caption" )
a6 := GetProperty ( "win1", "b6" , "caption" )
a7 := GetProperty ( "win1", "b7" , "caption" )
a8 := GetProperty ( "win1", "b8" , "caption" )
a9 := GetProperty ( "win1", "b9" , "caption" )
a1 = ALLTRIM ( a1 )
a2 = ALLTRIM ( a2 )
a3 = ALLTRIM ( a3 )
a4 = ALLTRIM ( a4 )
a5 = ALLTRIM ( a5 )
a6 = ALLTRIM ( a6 )
a7 = ALLTRIM ( a7 )
a8 = ALLTRIM ( a8 )
a9 = ALLTRIM ( a9 )
a1 = VAL ( a1 )
a2 = VAL ( a2 )
a3 = VAL ( a3 )
a4 = VAL ( a4 )
a5 = VAL ( a5 )
a6 = VAL ( a6 )
a7 = VAL ( a7 )
a8 = VAL ( a8 )
a9 = VAL ( a9 )
IF a8=0
a9 = STR ( a9 )
a8 = STR ( a8 )
SetProperty ( "win1", "b8" , "Caption" , a9 )
SetProperty ( "win1", "b9" , "Caption" , a8 )
Domethod ( "win1", "b8" , "Show" )
Domethod ( "win1", "b9" , "Hide" )
ENDIF
IF a7=0
a9 = STR ( a9 )
a7 = STR ( a7 )
SetProperty ( "win1", "b9" , "Caption" , a7 )
SetProperty ( "win1", "b7" , "Caption" , a9 )
Domethod ( "win1", "b7" , "Show" )
Domethod ( "win1", "b9" , "Hide" )
ENDIF
IF a3=0
a9 = STR ( a9 )
a3 = STR ( a3 )
SetProperty ( "win1", "b9" , "Caption" , a3 )
SetProperty ( "win1", "b3" , "Caption" , a9 )
Domethod ( "win1", "b3" , "Show" )
Domethod ( "win1", "b9" , "Hide" )
ENDIF
Return Nil


return

INIT PROCEDURE Init_NUNPUZLLE
SS_ON()
SS_ESARES("Circuits\Main\Main\Main",53)
SS_ESAGOAL("Circuits\Main\Main\Main","Main")
SS_ESASTEP("Circuits\Main\Main\Main","The First Step",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Define Window  ( win1 )",1,4)
SS_ESASTEP("Circuits\Main\Main\Main","Window Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Window Properties",5,11)
SS_ESASTEP("Circuits\Main\Main\Main","Window Controls",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b1 )",12,13)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",14,14)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",15,17)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b2 )",18,19)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",20,20)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",21,23)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b3 )",24,25)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",26,26)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",27,29)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b4 )",30,31)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",32,32)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",33,35)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b5 )",36,37)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",38,38)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",39,41)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b6 )",42,43)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",44,44)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",45,47)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b7 )",48,49)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",50,50)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",51,53)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b8 )",54,55)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",56,56)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",57,59)
SS_ESASTEP("Circuits\Main\Main\Main","Define New Button ( b9 )",60,61)
SS_ESASTEP("Circuits\Main\Main\Main","Button Events",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Event: ON CLICK",62,62)
SS_ESASTEP("Circuits\Main\Main\Main","Button Properties",63,65)
SS_ESASTEP("Circuits\Main\Main\Main","End Of Window",66,67)
SS_ESASTEP("Circuits\Main\Main\Main","Right-To-Left, Window 'Win1'",68,70)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Hide ( )",71,71)
SS_ESASTEP("Circuits\Main\Main\Main","Activate window",72,73)
SS_ESASTEP("Circuits\Main\Main\Main","MOVE",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb1",74,74)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",75,75)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",76,76)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",77,77)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",78,78)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",79,79)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",80,80)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",81,81)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",82,82)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",83,83)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",84,84)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",85,85)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",86,86)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",87,87)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",88,88)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",89,89)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",90,90)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",91,91)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",92,92)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",93,93)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",94,94)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",95,95)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",96,96)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",97,97)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",98,98)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",99,99)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",100,100)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",101,101)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a5=0 )",102,102)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO STRING",103,103)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO STRING",104,104)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Caption := a5",105,105)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Caption := a1",106,106)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Show ( )",107,107)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Hide ( )",108,108)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",109,109)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a6=0 )",110,110)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO STRING",111,111)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO STRING",112,112)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Caption := a6",113,113)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Caption := a1",114,114)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Hide ( )",115,115)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Show ( )",116,116)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",117,117)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",118,118)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb2",119,119)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",120,120)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",121,121)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",122,122)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",123,123)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",124,124)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",125,125)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",126,126)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",127,127)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",128,128)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",129,129)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",130,130)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",131,131)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",132,132)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",133,133)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",134,134)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",135,135)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",136,136)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",137,137)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",138,138)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",139,139)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",140,140)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",141,141)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",142,142)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",143,143)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",144,144)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",145,145)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",146,146)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a4=0 )",147,147)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO STRING",148,148)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO STRING",149,149)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Caption := a4",150,150)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Caption := a2",151,151)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Show ( )",152,152)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Hide ( )",153,153)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",154,154)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a5=0 )",155,155)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO STRING",156,156)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO STRING",157,157)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Caption := a5",158,158)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Caption := a2",159,159)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Show ( )",160,160)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Hide ( )",161,161)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",162,162)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",163,163)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb3",164,164)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",165,165)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",166,166)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",167,167)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",168,168)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",169,169)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",170,170)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",171,171)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",172,172)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",173,173)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",174,174)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",175,175)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",176,176)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",177,177)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",178,178)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",179,179)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",180,180)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",181,181)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",182,182)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",183,183)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",184,184)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",185,185)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",186,186)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",187,187)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",188,188)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",189,189)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",190,190)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",191,191)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a4=0 )",192,192)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO STRING",193,193)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",194,194)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a4",195,195)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Caption := a3",196,196)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Hide ( )",197,197)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Show ( )",198,198)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",199,199)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a5=0 )",200,200)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO STRING",201,201)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",202,202)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a5",203,203)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Caption := a3",204,204)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Hide ( )",205,205)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Show ( )",206,206)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",207,207)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a6=0 )",208,208)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO STRING",209,209)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",210,210)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a6",211,211)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Caption := a3",212,212)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Hide ( )",213,213)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Show ( )",214,214)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",215,215)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a9=0 )",216,216)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO STRING",217,217)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",218,218)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a9",219,219)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Caption := a3",220,220)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Hide ( )",221,221)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Show ( )",222,222)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",223,223)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",224,224)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb4",225,225)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",226,226)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",227,227)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",228,228)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",229,229)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",230,230)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",231,231)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",232,232)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",233,233)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",234,234)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",235,235)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",236,236)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",237,237)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",238,238)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",239,239)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",240,240)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",241,241)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",242,242)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",243,243)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",244,244)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",245,245)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",246,246)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",247,247)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",248,248)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",249,249)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",250,250)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",251,251)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",252,252)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a2=0 )",253,253)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO STRING",254,254)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO STRING",255,255)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Caption := a4",256,256)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Caption := a2",257,257)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Show ( )",258,258)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Hide ( )",259,259)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",260,260)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a3=0 )",261,261)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO STRING",262,262)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",263,263)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a4",264,264)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Caption := a3",265,265)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Show ( )",266,266)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Hide ( )",267,267)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",268,268)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a8=0 )",269,269)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO STRING",270,270)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO STRING",271,271)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Caption := a8",272,272)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Caption := a4",273,273)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Show ( )",274,274)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Hide ( )",275,275)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",276,276)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",277,277)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb5",278,278)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",279,279)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",280,280)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",281,281)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",282,282)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",283,283)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",284,284)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",285,285)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",286,286)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",287,287)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",288,288)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",289,289)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",290,290)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",291,291)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",292,292)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",293,293)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",294,294)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",295,295)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",296,296)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",297,297)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",298,298)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",299,299)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",300,300)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",301,301)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",302,302)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",303,303)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",304,304)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",305,305)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a2=0 )",306,306)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO STRING",307,307)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO STRING",308,308)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Caption := a5",309,309)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Caption := a2",310,310)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b2.Show ( )",311,311)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Hide ( )",312,312)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",313,313)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a3=0 )",314,314)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO STRING",315,315)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",316,316)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a5",317,317)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Caption := a3",318,318)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Show ( )",319,319)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Hide ( )",320,320)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",321,321)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a1=0 )",322,322)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO STRING",323,323)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO STRING",324,324)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Caption := a1",325,325)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Caption := a5",326,326)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Show ( )",327,327)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b5.Hide ( )",328,328)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",329,329)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",330,330)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb6",331,331)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",332,332)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",333,333)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",334,334)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",335,335)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",336,336)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",337,337)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",338,338)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",339,339)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",340,340)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",341,341)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",342,342)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",343,343)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",344,344)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",345,345)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",346,346)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",347,347)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",348,348)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",349,349)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",350,350)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",351,351)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",352,352)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",353,353)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",354,354)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",355,355)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",356,356)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",357,357)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",358,358)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a3=0 )",359,359)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO STRING",360,360)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",361,361)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a6",362,362)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Caption := a3",363,363)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Show ( )",364,364)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Hide ( )",365,365)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",366,366)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a1=0 )",367,367)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO STRING",368,368)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO STRING",369,369)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Caption := a1",370,370)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Caption := a6",371,371)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b1.Show ( )",372,372)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Hide ( )",373,373)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",374,374)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a7=0 )",375,375)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO STRING",376,376)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO STRING",377,377)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Caption := a7",378,378)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Caption := a6",379,379)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Show ( )",380,380)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Hide ( )",381,381)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",382,382)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",383,383)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb7",384,384)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",385,385)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",386,386)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",387,387)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",388,388)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",389,389)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",390,390)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",391,391)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",392,392)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",393,393)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",394,394)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",395,395)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",396,396)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",397,397)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",398,398)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",399,399)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",400,400)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",401,401)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",402,402)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",403,403)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",404,404)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",405,405)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",406,406)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",407,407)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",408,408)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",409,409)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",410,410)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",411,411)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a9=0 )",412,412)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO STRING",413,413)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO STRING",414,414)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Caption := a9",415,415)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Caption := a7",416,416)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Show ( )",417,417)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Hide ( )",418,418)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",419,419)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a6=0 )",420,420)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO STRING",421,421)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO STRING",422,422)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Caption := a7",423,423)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Caption := a6",424,424)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b6.Show ( )",425,425)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Hide ( )",426,426)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",427,427)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",428,428)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb8",429,429)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",430,430)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",431,431)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",432,432)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",433,433)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",434,434)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",435,435)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",436,436)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",437,437)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",438,438)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",439,439)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",440,440)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",441,441)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",442,442)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",443,443)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",444,444)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",445,445)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",446,446)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",447,447)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",448,448)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",449,449)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",450,450)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",451,451)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",452,452)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",453,453)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",454,454)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",455,455)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",456,456)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a9=0 )",457,457)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO STRING",458,458)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO STRING",459,459)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Caption := a9",460,460)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Caption := a8",461,461)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Show ( )",462,462)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Hide ( )",463,463)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",464,464)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a4=0 )",465,465)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO STRING",466,466)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO STRING",467,467)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Caption := a8",468,468)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Caption := a4",469,469)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b4.Show ( )",470,470)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Hide ( )",471,471)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",472,472)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",473,473)
SS_ESASTEP("Circuits\Main\Main\Main","Define Procedure pb9",474,474)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = win1.b1.caption",475,475)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = win1.b2.caption",476,476)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = win1.b3.caption",477,477)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = win1.b4.caption",478,478)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = win1.b5.caption",479,479)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = win1.b6.caption",480,480)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = win1.b7.caption",481,481)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = win1.b8.caption",482,482)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = win1.b9.caption",483,483)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = All Trim a1",484,484)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = All Trim a2",485,485)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = All Trim a3",486,486)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = All Trim a4",487,487)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = All Trim a5",488,488)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = All Trim a6",489,489)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = All Trim a7",490,490)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = All Trim a8",491,491)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = All Trim a9",492,492)
SS_ESASTEP("Circuits\Main\Main\Main","a1 = CONVERT a1 TO Numeric",493,493)
SS_ESASTEP("Circuits\Main\Main\Main","a2 = CONVERT a2 TO Numeric",494,494)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO Numeric",495,495)
SS_ESASTEP("Circuits\Main\Main\Main","a4 = CONVERT a4 TO Numeric",496,496)
SS_ESASTEP("Circuits\Main\Main\Main","a5 = CONVERT a5 TO Numeric",497,497)
SS_ESASTEP("Circuits\Main\Main\Main","a6 = CONVERT a6 TO Numeric",498,498)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO Numeric",499,499)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO Numeric",500,500)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO Numeric",501,501)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a8=0 )",502,502)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO STRING",503,503)
SS_ESASTEP("Circuits\Main\Main\Main","a8 = CONVERT a8 TO STRING",504,504)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Caption := a9",505,505)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Caption := a8",506,506)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b8.Show ( )",507,507)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Hide ( )",508,508)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",509,509)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a7=0 )",510,510)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO STRING",511,511)
SS_ESASTEP("Circuits\Main\Main\Main","a7 = CONVERT a7 TO STRING",512,512)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Caption := a7",513,513)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Caption := a9",514,514)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b7.Show ( )",515,515)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Hide ( )",516,516)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",517,517)
SS_ESASTEP("Circuits\Main\Main\Main","IF ( a3=0 )",518,518)
SS_ESASTEP("Circuits\Main\Main\Main","Code Block",0,0)
SS_ESASTEP("Circuits\Main\Main\Main","a9 = CONVERT a9 TO STRING",519,519)
SS_ESASTEP("Circuits\Main\Main\Main","a3 = CONVERT a3 TO STRING",520,520)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Caption := a3",521,521)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Caption := a9",522,522)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b3.Show ( )",523,523)
SS_ESASTEP("Circuits\Main\Main\Main","win1.b9.Hide ( )",524,524)
SS_ESASTEP("Circuits\Main\Main\Main","END OF IF STATEMENT",525,525)
SS_ESASTEP("Circuits\Main\Main\Main","End of Procedure",526,526)
Return
