<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta name="Generator" content="Microsoft Word 10 (filtered)">
<title>The Veto Unit</title>
<style type="text/css">
<!--
 /* Font Definitions */
 @font-face
        {font-family:Wingdings;
        panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
        {font-family:Tahoma;
        panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
        {font-family:TimesNewRoman;
        panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
        {margin:0cm;
        margin-bottom:.0001pt;
        text-align:right;
        line-height:normal;
        direction:rtl;
        unicode-bidi:embed;
        font-size:12.0pt;
        font-family:"Times New Roman";}
h1
        {margin:0cm;
        margin-bottom:.0001pt;
        line-height:normal;
        page-break-after:avoid;
        text-autospace:none;
        font-size:18.0pt;
        font-family:TimesNewRoman;
        font-weight:bold;}
h2
        {margin-top:1.0pt;
        margin-right:0cm;
        margin-bottom:0cm;
        margin-left:0cm;
        margin-bottom:.0001pt;
        text-align:justify;
        line-height:normal;
        page-break-after:avoid;
        text-autospace:none;
        font-size:18.0pt;
        font-family:TimesNewRoman;
        font-weight:bold;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
        {margin:0cm;
        margin-bottom:.0001pt;
        text-align:right;
        line-height:normal;
        direction:rtl;
        unicode-bidi:embed;
        font-size:12.0pt;
        font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
        {margin:0cm;
        margin-bottom:.0001pt;
        text-align:right;
        line-height:normal;
        direction:rtl;
        unicode-bidi:embed;
        font-size:12.0pt;
        font-family:"Times New Roman";}
a:link, span.MsoHyperlink
        {color:blue;
        text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
        {color:purple;
        text-decoration:underline;}
p
        {margin-top:4.8pt;
        margin-right:0cm;
        margin-bottom:6.0pt;
        margin-left:0cm;
        line-height:18.0pt;
        font-size:12.0pt;
        font-family:"Times New Roman";}
pre
        {margin:0cm;
        margin-bottom:.0001pt;
        line-height:13.2pt;
        background:#F9F9F9;
        border:none;
        padding:0cm;
        font-size:10.0pt;
        font-family:"Courier New";
        color:black;}
span.Char1
        {font-family:"Courier New";
        color:black;
        background:#F9F9F9;}
 /* Page Definitions */
 @page Section1
        {size:595.3pt 841.9pt;
        margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
        {page:Section1;}
 /* List Definitions */
 ol
        {margin-bottom:0cm;}
ul
        {margin-bottom:0cm;}
-->
</style>
<link rel="stylesheet" href="files/helpindex.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "d45.htm";
</script>

</head>
<body lang="EN-US" link="blue" vlink="purple"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=d45.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=d45.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<div class="Section1" dir="rtl">
<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><span style=
'font-size:18.0pt'>The Veto Unit</span>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
We are in the world of Client-Server software, Object Oriented was
so fine in the world of GUI, but it's does not take Client-Server
in mind, so we need&nbsp; intelligent programming paradigm that
take other features of software in mind</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
DoubleS paradigm designed to present the best solution for the most
complex client-server applications; also DoubleS paradigm takes
other features of software in mind.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name=
"introduction_to_veto_unit" id=
"introduction_to_veto_unit"></a>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name=
"introduction_to_veto" id="introduction_to_veto"></a><b>The Veto
Concept</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
Now, you may ask "Veto Unit, what is the veto thing?"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
Ok I will tell you, the veto in DoubleS paradigm means "the message
that passed from server to another one, and this message may be
accepted or refused, also the message can contain unlimited amount
of data that come before it."</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
You need to define the veto only at the Server which will receive
the requests from another one.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
When you define the veto, you tied it with resistance in you server
circuits, so when invoking the veto this resistance will invoked
only if the veto is accepted.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
So the data required to define the veto is (Name, Type, Circuit,
Branch and Resistance).</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
I know that you will ask "How I will control if the veto should
accepted or not?"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
At your design time you will put conditions to determine when you
will accept the veto, and when not, while in programming you can
set two items for the server, one called "Receiver Veto" which
invoked when there are veto passed to the server, and another item
called "Sender Veto" which invoked when sending veto to another
server</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name=
"introduction_to_channel" id="introduction_to_channel"></a><b>The
Channel Concept</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
Now the question "how I can collect unlimited amount of data passed
to my server beside veto also how I can send unlimited amount of
data while I send my veto?"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;Ok, it's the time now to present the second block in the veto
unit which called the "Channel", simply it's not more than
"Reference to sub shell in atom" and this means that for defining
channel we need to determine "Name, Type, Atom, Shell and Sub
Shell).</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
You have two genders of channels "Input Channel &amp; Output
Channel", at the "Server" side we need to define Input Channel to
receive in it unlimited amount of data, in "Client" Side we can
define "Output channel" to store data that we send from the
Server.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name=
"the_concept_of_connection" id=
"the_concept_of_connection"></a><b>The Connection Concept</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
Ok, the question now which may be in mind from a long time "How I
can connect Server to another one?"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
This is simple process, we use in that the third block in Veto Unit
which called "Connection", which is used for connection and also
setting how we will manage the "Interaction" process between
servers, this means determining what is the servers we want to
connect to?, what are the channels used for input &amp; output
operations?, what is the sender veto for that connection only? And
what is the receiver veto for that connection only?</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;text-indent:36.0pt; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name=
"veto_system_levels" id="veto_system_levels"></a><b>Veto System
Levels</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
Now we have only one tip, in veto system there are levels where
each level determine the environment in which the system will work,
for example you start writing the client-server software through
level (1) "virtual client-server", so you can test your software
and generate one "executable" file that contain both the client and
server, then you can change the level of the veto system, for
example veto system level (2) "at LAN level through shared data
files".</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
This means that through veto system you can write your
client-server software that can be work in different environments
(Desktop, LAN and Internet) without changing the base code, only
you set the environment variables.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
Now, we have simple example for both "Client side" and "Server
side" servers which will show how writing client-server software in
DoubleS paradigm is simple and effective process.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>
In our example we will use veto system level (1), virtual
client-server.</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:108.0pt;text-align:left; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name="vsl1"
id="vsl1"></a><b>Veto System Level [1]</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;This
Level (VSL1) called "Virtual Client-Server"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Both the client and the
Server are in the same Executable Program</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This Level is not more
than a prototype for client-server systems</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No use for Shared Data
Files</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No use for external
Programs</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No use for Network
protocols like TCP/IP at all</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name="vsl2"
id="vsl2"></a><b>Veto System Level [2]</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>This Level
(VSL2) called "Client-Server Based on Shared Data Files"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Shared Data Files are
two file (SS1.DBF) &amp; (SS2.DBF)</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Client and the Server
are isolated from each other</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This Level used when
client-server applications works in the same Machine or LAN</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No use for external
Programs or Network protocols like TCP/IP at all</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><a name="vsl3"
id="vsl3"></a>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><b>Veto System
Level [3]</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><b>&nbsp;</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>This Level
(VSL3) called "Client-Server Based on TCPIP Server"</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Client and the Server
are isolated from each other</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This Level works on
(Desktop, LAN, Internet…etc) any IP Based Network.</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; There is usage for
external program "TCPIP.EXE" called TCP/IP Server</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The external program
required at both the client-side &amp; Server Side</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Using Network protocols
like TCP/IP done only by the external program</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The communication between
the Client-Side and TCPIP.EXE done through VSL2</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:36.0pt;text-align:left; text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'>
<img width="11" height="11" src="d45_files/image002.gif" alt=
"*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The communication between
the Server-Side and TCPIP.EXE done through VSL2</p>

<p class="MsoNormal" dir="ltr" style=
'margin-left:18.0pt;text-align:left; direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><img width=
"553" height="232" src="d45_files/image003.jpg">
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><img width=
"554" height="272" src="d45_files/image004.jpg">
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>Domain (Veto
Unit)</p>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
