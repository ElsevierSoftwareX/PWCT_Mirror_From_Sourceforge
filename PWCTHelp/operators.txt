Operators
-----------

Supernova Compiler treat expressions as subset of data
        expression.
        'expression'
        "expression"

Inside the expression

[] used to determine variables
	[Variable Name]
() used to determine values
	(Value)
|| used as another way to determine value 
   (This way allow using [] and () in strings)
	|Value|

Operators are inserted between variables and values
   
[1] Arithmetic Operators

    * x X   Multiplication
    /	    Division
    %       Modulus
    +       Addition
    -	    Subtraction

[2] Logical Operators
    and
    or
    not

[3] Relational Operators
    >	    Greater than
    <	    Less than
    >=      Greater or Equal to
    <=      Less or Equal to
    ==      Equal
    !=      Not Equal

Precedence of Supernova Operators
-----------------------------------

Higest               * x X / %
		     +  -
		     < > <= >=
		     !=  ==
		     Not
Lowest		     And Or


Examples
----------

IsLessThan.nova
-----------------

I want window contains listbox and window title is is greater than.

test true. instructions are the listbox must add item True. ok
test false. instructions are the listbox must add item False. ok

[v2]. = (20).
[v1]. = (25). and [test]. = [v1] < [v2].
[v1]. = (5).  and [test]. = [v1] < [v2].
[v1]. = (15). and [test]. = [v1] < [v2].
[v1]. = (28). and [test]. = [v1] < [v2].

IsGreaterThan.nova
--------------------

I want window contains listbox and window title is is greater than.
the window name is win1.

test true. instructions are the listbox must add item True. ok
test false. instructions are the listbox must add item False. ok

[v2]. = (20).
[v1]. = (25). and [test]. = [v1] > [v2].
[v1]. = (5).  and [test]. = [v1] > [v2].
[v1]. = (15). and [test]. = [v1] > [v2].
[v1]. = (28). and [test]. = [v1] > [v2].

IsLessOrEqual.nova
--------------------

I want window contains listbox and window title is is less or Equal.

test true. instructions are the listbox must add item True. ok
test false. instructions are the listbox must add item False. ok

[v2]. = (20).
[v1]. = (25). and [test]. = [v1] <= [v2].
[v1]. = (5).  and [test]. = [v1] <= [v2].
[v1]. = (21). and [test]. = [v1] <= [v2].
[v1]. = (20). and [test]. = [v1] <= [v2].

IsGreaterOrEqual.nova
-----------------------

I want window contains listbox and window title is is greater or Equal.

test true. instructions are the listbox must add item True. ok
test false. instructions are the listbox must add item False. ok

[v2]. = (20).
[v1]. = (25). and [test]. = [v1] >= [v2].
[v1]. = (5).  and [test]. = [v1] >= [v2].
[v1]. = (21). and [test]. = [v1] >= [v2].
[v1]. = (20). and [test]. = [v1] >= [v2].

IsEqual.nova
--------------

i want window contains editbox
[mytest]. = (3).
[myif]. = [mytest] is equal (3).

myif true. instructions are
the window title is wow.
end of instructions

IsNotEqual.nova
-----------------

i want window contains editbox
[mytest]. = (3).
[myif]. = [mytest] != (4).

myif true. instructions are
the window title is wow.
end of instructions

Precedence.nova
-----------------

I want window and the window title is Precedence.
The window height is 300. and window back color = {30,200,100}.
I want listbox and the listbox name is mylist1.
[v1]. = (3)+(15)x(3).
listbox must add from [v1].
[v1]. = (3)+(15)x(3)+(4)x(12).
listbox must add from [v1].
[v2]. = (3).
[v1]. = (6)+[v2]x(15).
listbox must add from [v1].
[v1]. = (6)x(15).
listbox must add from [v1].
[v1]. = (6)x(15)x(3).
listbox must add from [v1].

GoodLoop1.nova
----------------

i want window contains listbox

[loop]. = [x] < (10). and loop true. instructions are
	[x]. = [x] + (1).
	listbox must add from [x].
	[loop]. = [x] < (10). 
end of instructions


GoodLoop2.nova
--------------

i want window contains listbox

[x]. = (10).
[loop]. = [x] >= (10) and [x] <= (100). and loop true. instructions are
	listbox must add from [x].
	[x]. = [x] + (1).
	[loop]. = [x] >= (10) and [x] <= (100).
end of instructions


GoodLoop3.nova
---------------

i want window contains listbox

[mystart]. = (10). and [myend]. = (100). and [x]. = [mystart].
[loop]. = [x] >= [mystart] and [x] <= [myend]. 
loop true. instructions are
	listbox must add from [x].
	[x]. = [x] + (1).
	[loop]. = [x] >= [mystart] and [x] <= [myend].
end of instructions


CheckAndOrNot.nova
--------------------

i want window contains listbox

listbox must add item "test using values"

[x]. = (True) and (False).
listbox must add from [x].

[x]. = (True) or (False).
listbox must add from [x].

[x]. = not (False).
listbox must add from [x].

[x]. = not (True).
listbox must add from [x].

[x]. = (True) or not (True).
listbox must add from [x].

[x]. = (True) and not (True).
listbox must add from [x].

listbox must add item "test using variables"

[a]. = (True). [b]. = (False).

[x]. = [a] and [b].
listbox must add from [x].

[x]. = [a] or [b].
listbox must add from [x].

[x]. = not [b].
listbox must add from [x].

[x]. = not [a].
listbox must add from [x].

[x]. = [a] or not [a].
listbox must add from [x].

[x]. = [a] and not [a].
listbox must add from [x].

ValueInRange.nova
-------------------

i want window contains listbox
the window title is the test is true when   5 < thevalue < 10.

i want textbox and i want button
the button left is 300.
the button caption is test value.
the button name is btn1.
the listbox top is 50.

btn1 mouseclick. instructions are
	store the textbox value to [x].
	[mytest]. = [x] > (5) and [x] < (10).
ok

mytest true. instructions are
listbox  must add item True.
ok

mytest false. instructions are
listbox  must add item False.
ok


Assignment.nova
-----------------
 
I want window and the window title is Assignment.
The window height is 300. and window back color = {30,200,100}.
I want listbox and the listbox name is mylist1.
i want listbox and the listbox name is mylist2.
listbox left is 250.
[v1]. is ( Hello )( World ).
[v2]. = (15)x(3).
[v3]. equal (Country).
[v4]. = (Hello)[v1].
[v5]. = (12) and (7) or (1) not (13).
[v6]. = | (1) [One] (2) [Two] |.
[v7]. = (Hello )[GoodName].
mylist2. listbox selected
listbox must add item "[v1]. is ( Hello )( World )."
listbox must add item "[v2]. = (15)x(3)."
listbox must add item "[v3]. equal (Country)."
listbox must add item "[v4]. = (Hello)[v1]."
listbox must add item "[v5]. = (12) and (7) or (1) not (13)."
listbox must add item "[v6]. = | (1) [One] (2) [Two] |."
listbox must add item "[v7]. = (Hello )[GoodName]."
mylist1. listbox selected
listbox must add from [v1].
listbox must add from [v2].
listbox must add from [v3].
listbox must add from [v4].
listbox must add from [v5].
listbox must add from [v6].
listbox must add from [v7].
