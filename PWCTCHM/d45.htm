<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1256">
<meta name=Generator content="Microsoft Word 10 (filtered)">
<title>The Veto Unit</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:TimesNewRoman;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:normal;
	direction:rtl;
	unicode-bidi:embed;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h1
	{margin:0cm;
	margin-bottom:.0001pt;
	line-height:normal;
	page-break-after:avoid;
	text-autospace:none;
	font-size:18.0pt;
	font-family:TimesNewRoman;
	font-weight:bold;}
h2
	{margin-top:1.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	line-height:normal;
	page-break-after:avoid;
	text-autospace:none;
	font-size:18.0pt;
	font-family:TimesNewRoman;
	font-weight:bold;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:normal;
	direction:rtl;
	unicode-bidi:embed;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:right;
	line-height:normal;
	direction:rtl;
	unicode-bidi:embed;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p
	{margin-top:4.8pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	line-height:18.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	line-height:13.2pt;
	background:#F9F9F9;
	border:none;
	padding:0cm;
	font-size:10.0pt;
	font-family:"Courier New";
	color:black;}
span.Char1
	{font-family:"Courier New";
	color:black;
	background:#F9F9F9;}
 /* Page Definitions */
 @page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=Section1 dir=RTL>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><span style='font-size:18.0pt'>The Veto Unit</span></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>We are in
the world of Client-Server software, Object Oriented was so fine in the world
of GUI, but it's does not take Client-Server in mind, so we need  intelligent
programming paradigm that take other features of software in mind </p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>DoubleS
paradigm designed to present the best solution for the most complex
client-server applications; also DoubleS paradigm takes other features of
software in mind.</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name="introduction_to_veto_unit"></a>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name="introduction_to_veto"></a><b>The Veto Concept</b></p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>Now, you may ask &quot;Veto Unit, what is the
veto thing?&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>Ok I will tell you, the veto in DoubleS
paradigm means &quot;the message that passed from server to another one, and
this message may be accepted or refused, also the message can contain unlimited
amount of data that come before it.&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>You need to define the veto only at the
Server which will receive the requests from another one.</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>When you define the veto, you tied it with
resistance in you server circuits, so when invoking the veto this resistance
will invoked only if the veto is accepted.</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>So the data required to define the veto is
(Name, Type, Circuit, Branch and Resistance).</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>I know that you will ask &quot;How I will
control if the veto should accepted or not?&quot; </p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>At your design time you will put conditions
to determine when you will accept the veto, and when not, while in programming
you can set two items for the server, one called &quot;Receiver Veto&quot;
which invoked when there are veto passed to the server, and another item called
&quot;Sender Veto&quot; which invoked when sending veto to another server </p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name="introduction_to_channel"></a><b>The Channel Concept</b></p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>Now the question &quot;how I can collect
unlimited amount of data passed to my server beside veto also how I can send
unlimited amount of data while I send my veto?&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;Ok, it's the time now to present the
second block in the veto unit which called the &quot;Channel&quot;, simply it's
not more than &quot;Reference to sub shell in atom&quot; and this means that
for defining channel we need to determine &quot;Name, Type, Atom, Shell and Sub
Shell).</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>You have
two genders of channels &quot;Input Channel &amp; Output Channel&quot;, at the
&quot;Server&quot; side we need to define Input Channel to receive in it
unlimited amount of data, in &quot;Client&quot; Side we can define &quot;Output
channel&quot; to store data that we send from the Server.</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name="the_concept_of_connection"></a><b>The Connection Concept</b></p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>Ok, the question now which may be in mind
from a long time &quot;How I can connect Server to another one?&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>This is simple process, we use in that the
third block in Veto Unit which called &quot;Connection&quot;, which is used for
connection and also setting how we will manage the &quot;Interaction&quot;
process between servers, this means determining what is the servers we want to
connect to?, what are the channels used for input &amp; output operations?,
what is the sender veto for that connection only? And what is the receiver veto
for that connection only?</p>

<p class=MsoNormal dir=LTR style='text-align:left;text-indent:36.0pt;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name="veto_system_levels"></a><b>Veto System Levels</b></p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>Now we
have only one tip, in veto system there are levels where each level determine
the environment in which the system will work, for example you start writing
the client-server software through level (1) &quot;virtual client-server&quot;,
so you can test your software and generate one &quot;executable&quot; file that
contain both the client and server, then you can change the level of the veto
system, for example veto system level (2) &quot;at LAN level through shared
data files&quot;.</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>This means
that through veto system you can write your client-server software that can be
work in different environments (Desktop, LAN and Internet) without changing the
base code, only you set the environment variables.</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>Now, we
have simple example for both &quot;Client side&quot; and &quot;Server
side&quot; servers which will show how writing client-server software in
DoubleS paradigm is simple and effective process.</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:justify;text-justify:kashida;
text-kashida:0%;text-indent:36.0pt;direction:ltr;unicode-bidi:embed'>In our
example we will use veto system level (1), virtual client-server.</p>

<p class=MsoNormal dir=LTR style='margin-left:108.0pt;text-align:left;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name=vsl1></a><b>Veto System Level [1]</b></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;This Level (VSL1) called &quot;Virtual Client-Server&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Both
the client and the Server are in the same Executable Program</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This
Level is not more than a prototype for client-server systems</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No
use for Shared Data Files</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No
use for external Programs</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No
use for Network protocols like TCP/IP at all </p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name=vsl2></a><b>Veto System Level [2]</b></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>This Level (VSL2) called &quot;Client-Server Based on Shared Data
Files&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
Shared Data Files are two file (SS1.DBF) &amp; (SS2.DBF)</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
Client and the Server are isolated from each other</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This
Level used when client-server applications works in the same Machine or LAN</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No
use for external Programs or Network protocols like TCP/IP at all</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><a name=vsl3></a>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><b>Veto System Level [3]</b></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><b>&nbsp;</b></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>This Level (VSL3) called &quot;Client-Server Based on TCPIP Server&quot;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
Client and the Server are isolated from each other</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This
Level works on (Desktop, LAN, Internetetc) any IP Based Network.</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; There
is usage for external program &quot;TCPIP.EXE&quot; called TCP/IP Server</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
external program required at both the client-side &amp; Server Side</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Using
Network protocols like TCP/IP done only by the external program</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
communication between the Client-Side and TCPIP.EXE done through VSL2</p>

<p class=MsoNormal dir=LTR style='margin-left:36.0pt;text-align:left;
text-indent:-18.0pt;direction:ltr;unicode-bidi:embed'><img width=11 height=11
src="d45_files/image002.gif" alt="*">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
communication between the Server-Side and TCPIP.EXE done through VSL2</p>

<p class=MsoNormal dir=LTR style='margin-left:18.0pt;text-align:left;
direction:ltr;unicode-bidi:embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><img width=553 height=232 src="d45_files/image003.jpg"></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>&nbsp;</p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'><img width=554 height=272 src="d45_files/image004.jpg"></p>

<p class=MsoNormal dir=LTR style='text-align:left;direction:ltr;unicode-bidi:
embed'>Domain (Veto Unit)</p>

</div>

</body>

</html>
