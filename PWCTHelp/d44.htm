<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta name="Generator" content="Microsoft Word 10 (filtered)">
<title>OOP Simulation</title>
<style type="text/css">
<!--
 /* Font Definitions */
 @font-face
        {font-family:Wingdings;
        panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
        {font-family:Tahoma;
        panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
        {font-family:TimesNewRoman;
        panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
        {margin:0cm;
        margin-bottom:.0001pt;
        text-align:right;
        line-height:normal;
        direction:rtl;
        unicode-bidi:embed;
        font-size:12.0pt;
        font-family:"Times New Roman";}
h1
        {margin:0cm;
        margin-bottom:.0001pt;
        line-height:normal;
        page-break-after:avoid;
        text-autospace:none;
        font-size:18.0pt;
        font-family:TimesNewRoman;
        font-weight:bold;}
h2
        {margin-top:1.0pt;
        margin-right:0cm;
        margin-bottom:0cm;
        margin-left:0cm;
        margin-bottom:.0001pt;
        text-align:justify;
        line-height:normal;
        page-break-after:avoid;
        text-autospace:none;
        font-size:18.0pt;
        font-family:TimesNewRoman;
        font-weight:bold;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
        {margin:0cm;
        margin-bottom:.0001pt;
        text-align:right;
        line-height:normal;
        direction:rtl;
        unicode-bidi:embed;
        font-size:12.0pt;
        font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
        {margin:0cm;
        margin-bottom:.0001pt;
        text-align:right;
        line-height:normal;
        direction:rtl;
        unicode-bidi:embed;
        font-size:12.0pt;
        font-family:"Times New Roman";}
a:link, span.MsoHyperlink
        {color:blue;
        text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
        {color:purple;
        text-decoration:underline;}
p
        {margin-top:4.8pt;
        margin-right:0cm;
        margin-bottom:6.0pt;
        margin-left:0cm;
        line-height:18.0pt;
        font-size:12.0pt;
        font-family:"Times New Roman";}
pre
        {margin:0cm;
        margin-bottom:.0001pt;
        line-height:13.2pt;
        background:#F9F9F9;
        border:none;
        padding:0cm;
        font-size:10.0pt;
        font-family:"Courier New";
        color:black;}
span.Char1
        {font-family:"Courier New";
        color:black;
        background:#F9F9F9;}
 /* Page Definitions */
 @page Section1
        {size:595.3pt 841.9pt;
        margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
        {page:Section1;}
 /* List Definitions */
 ol
        {margin-bottom:0cm;}
ul
        {margin-bottom:0cm;}
-->
</style>
<link rel="stylesheet" href="files/helpindex.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "d44.htm";
</script>

</head>
<body lang="EN-US" link="blue" vlink="purple"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=d44.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=d44.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<div class="Section1" dir="rtl">
<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><span style=
'font-size:18.0pt'>OOP Simulation</span>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
DoubleS is a new programming paradigm, so it's full replacement for
OOP (Object Oriented Programming), but OOP is a result of a good
though and OOP is suitable for a lot of applications with different
complexity levels so when inviting new programming paradigm like
"DoubleS" it's expected to take OOP ideas in mind, so here we find
OOP with new skin (Embedded OOP) suitable with the new paradigm
which is based on simulation.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
If you familiar with OOP, you know what is (Classes, Objects,
Polymorphism, Inheritance, Encapsulation, Composition &amp; Design
Patterns).</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
All of these concepts are presented with Pure OOP languages and we
used to use its power in our projects from long years.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
Embedded OOP presents all the concepts of Pure OOP where you can
create Classes &amp; Objects which mean Encapsulation and
Polymorphism; also you have support for Inheritance &amp;
Composition and the using of OOP design patterns is possible.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;text-justify:kashida; text-kashida:0%;direction:ltr;unicode-bidi:embed'>
&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'margin-bottom:12.0pt;text-align:left; direction:ltr;unicode-bidi:embed'>
Embedded OOP is not only representation for OOP, its new though
based on that</p>

<p class="MsoNormal" dir="ltr" style=
'margin-bottom:12.0pt;text-align:left; direction:ltr;unicode-bidi:embed'>
<i><span style='background:silver'>"Classes are treated as Objects,
Can be Created, Manipulated and deleted during Runtime"</span></i>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>I think its
shock for you, and you may ask</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><i>&nbsp;</i>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><i>Classes are
the factory of Object, if Classes are treated like objects, what is
the factory of class?</i>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>Simply the
Server is the Factory of Class</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><img width=
"553" height="402" src="d44_files/image002.jpg">
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><i>&nbsp;</i>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>Also there are
another change, this change lies in the way that how classes
defined?</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><img width=
"553" height="306" src="d44_files/image003.jpg">
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>Classes are a
group of Attributes and Methods packed together, in Embedded OOP
through DoubleS Paradigm the attributes are determined using Sub
Shell and the Methods are determined using a Branch.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'><a name=
"myb5" id="myb5"></a><b>Encapsulation</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>Object
Oriented Programming (OOP) uses the concept of encapsulation where
data (Attributes) and Methods are encapsulated together inside the
Class</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>Now DoubleS
Paradigm presents more of encapsulation, it's "FREE ENCAPSULATION"
where data (Attributes) and Methods are encapsulated together
inside class but the definition of data still free and isolated
inside sub shell, the same with methods which are free as
resistances inside branches.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>Also there
is more encapsulation, where classes are encapsulated together
inside the Server.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'><a name=
"myb6" id="myb6"></a><b>Polymorphism</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>Polymorphism
in Embedded OOP is the same as in Pure OOP, but in general DoubleS
Paradigm presents the concept of Polymorphism at different places
(Electrons, Sub Shell, Shell, Resistance and Branch).</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'><a name=
"myb7" id="myb7"></a><a name="myb10" id="myb10"></a><b>The concept
of Dynamic Classes</b>
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:justify;direction:ltr;unicode-bidi: embed'>Classes in
Embedded OOP is so different from classes that we know in Pure OOP,
Classes in Embedded OOP has new advantage, it's Dynamic Classes
where it's Structure (Attributes) can be changed after creating the
class and after generating Objects from the class.</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>&nbsp;</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'><img width=
"554" height="310" src="d44_files/image004.jpg">
</p>

<p class="MsoNormal" dir="ltr" style=
'text-align:left;direction:ltr;unicode-bidi: embed'>Domain (OOP
Simulation)</p>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
