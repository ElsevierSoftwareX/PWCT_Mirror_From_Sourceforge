Samples
---------

1 - KnowledgePower.nova
2 - ExpressionPower1.nova
3 - ExpressionPower2.nova
4 - EventsPower.nova

[1] KnowledgePower.nova
-------------------------

I want window 
The window title is Looking To The future.
I want listbox and the listbox top = 60.
window width = 700. and listbox width = 650.
The listbox must add item Supernova know that any variable may exist at any time in the future.
The listbox must add from [x].
The listbox must add item Supernova suggest that the initial [x] value is (1) when you write [x] x (5).
The listbox must add from [x] x (5).
The listbox must add item Supernova suggest that the initial [x] value is (0) when you write [x] + (5).
The listbox must add from [x] + (5).

[2] ExpressionPower1.nova
---------------------------

I want window contains button
Button name is btn1. and button caption = Multiply.
The window title is Looking To The future.

I want listbox and the listbox top = 60.

Btn1 mouseclick. instructions are
:note: "Using [X] in the right side without 
        declaration and/or assigning a value to it.
	[x] automatically take the value of (1) because there are
        Multiply operation (x)"

	[x]. = [x] x (5).
	
	The listbox must add from [x].

End of instructions

[3] ExpressionPower2.nova
---------------------------

(15). decimal places allowed

I want window contains button
Button name is btn1. and button caption = Division.
The window title is Looking To The future.

I want listbox and the listbox top = 60.

Btn1 mouseclick. instructions are
:note: "Using [X] in the right side without 
        declaration and/or assigning a value to it.
	[x] automatically take the value of (1) because there are
        Division operation (/)"

	[x]. = [x] / (5).
	
	The listbox must add from [x].

End of instructions

[4] EventsPower.nova
----------------------

I want window contains button
Button name is btn1. and button caption = Create button.
The window title is Looking To The future.
Window width = 700.

:note: "Btn2 event before creating btn2 !!!"
Btn2 mouseclick. instructions are
	I want window and window title is wow.
End of instructions

:note: " x = 450 event before creating [x] !!!"
X 450. instructions are
	btn1. button selected
	The button caption is Close.
end of instructions

:note: " x = 600 event before creating [x] !!!"
X 600. instructions are you close application ok

Btn1 mouseclick. instructions are
:note: "Using [X] in the right side without 
        declaration and/or assigning a value to it.
	[x] automatically take the value of (0) because there are
        sum operation (+)"

	[x]. = [x] + (150).

	I want  button and the button name is btn2. 
	button left from [x].

End of instructions



